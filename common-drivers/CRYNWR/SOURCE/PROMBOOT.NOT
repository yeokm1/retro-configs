It has previously been rather difficult to use packet drivers if your PC
is PROM booted from a network. The first good solution for Novell networks
was described in the Wesleyan report. It was still rather complicated, though.

Then I saw the appended message from John Mann. I have tried it and it is
much easier.

His fix, however, required a special version of each driver to be used for
PROM boot (remote reset i Novell terminology). That's hard to maintain
and would double the size of the packet driver distribution file.

So I have turned his fix into an option at load time. Or rather TWO options.

The -n option converts between Ethernet type 8137 and Novell ISO-like
packets.  This is required if you use a standard boot PROM from the
network card manufacturer and use the packet driver IPX from BYU. But
as an added feature you can also use it to run packet drivers without
ECONFIGing the Novell server, which is not always possible.

The -d option delays initialization and is the elegant solution to
make PROM booting work. Because the initialization code must be kept
after loading, the size of the packet driver will increase in this
case. I have however enhanced Johns code by recognising that this code
was at the end of TAIL.ASM, and by moving it to the beginning, I saved
about 1 kbyte. Now the -d option only increases the packet driver size
by 1.5 kbyte.

Typical AUTOEXEC.BAT for DOS 3.x and Novell Netware PROM boot:

  echo off
  prompt $p$g
  keybsv (or any other TSRs you need)
  wd8003e -d -n 0x7c 3 0x280 0xd000
  ipx
  net3
  rem < - - - - - - - - - - - this is a long line of spaces - - - - - - - >
  rem < - - - - - - - - - - - this is a long line of spaces - - - - - - - >
  f:
  login

Also copy the above AUTOEXEC.BAT to the SYS:LOGIN directory.
  
Thats all, folks. Enjoy!

                                             
Jan Engvald, Lund University Computing Center
________________________________________________________________________
   Address: Box 783                E-mail: xjeldc@ldc.lu.se
            S-220 07 LUND     Earn/Bitnet: xjeldc@seldc52
            SWEDEN           (Span/Hepnet: Sweden::Gemini::xjeldc)
    Office: Soelvegatan 18         VAXPSI: psi%24020031020720::xjeldc
 Telephone: +46 46 107458          (X.400: C=se; A=TeDe; P=Sunet; O=lu;
   Telefax: +46 46 138225                  OU=ldc; S=Engvald; G=Jan)
     Telex: 33533 LUNIVER S
==============================================================================

From lth.se!sunic!mcsun!uunet!cs.utexas.edu!samsung!munnari.oz.au!bruce!monu1!
     vaxc!johnm Mon Jun 11 17:03:26 MET DST 1990

In article <399@van-bc.UUCP>, skl@van-bc.UUCP (Samuel Lam) writes:
> By now, thanks to Kelly MacDonald at BYU, we all know how to do
> Ethernet II (Blue Book) Novell over a packet driver and make it
> co-exist with a TCP/IP stack on top of the same packet driver...
> 
> The question of the day now is:  Does anyone have any insight
> in doing the same with the ordinary 802.3 Novell, so that one
> would not have to involve the Novell servers and other Novell
> nodes on the network just to get TCP/IP and Novell to co-exist
> on one Ethernet interface on a single PC?

I've done it.  I modified HEAD.ASM and TAIL.ASM from version 5 of the
packet drivers and use an IPX linked against PDSHELL.OBJ.  

I also modified things so that the packet driver doesn't initialize the
Ethernet card until you actually use the packet driver.  This works well
with the WD8003E driver, but with the NE1000/Tiara driver it doesn't
show you the Ethernet address until you actually start using the packet
driver.  :-(

We had to continue using 802.3 Novell because we needed student PCs to
remote boot (from the Novell fileserver).  In the AUTOEXEC.BAT just load
the appropriate packet driver, IPX linked against PDSHELL, NET3, and do
the rest of the things you normally do.  No need to have a RAM disk
taking up memory.

In our AUTOEXEC.BAT we also have a program that looks at the signature
in the Ethernet Boot ROM and decides which packet driver to load (with
which IRQ etc.).  This means we can have *one* boot image on the server
for all types of cards, and we don't have classrooms full of PCs each
reading BOOTCONF.SYS two bytes at a time ... but that's a different
story.

Please use this code, improve it (it's my only bit of 8*86 coding --
done without a manual), and share it around.

	John

< Patches to HEAD.ASM and TAIL.ASM deleted >

--
John Mann, Computer Centre, Monash University, Clayton VIC 3168, Australia
Net: johnm@vaxc.cc.monash.edu.au  Ph: +61 3 565 4774  FAX: +61 3 565 4746


